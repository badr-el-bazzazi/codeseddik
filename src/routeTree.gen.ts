/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as SeriesSerieidImport } from './routes/series/$serieid'
import { Route as SeriesResultsIndexImport } from './routes/series/results/index'
import { Route as SeriesSeriedetailsSerieidImport } from './routes/series/serie_details/$serieid'
import { Route as SeriesResultsResultdetailsImport } from './routes/series/results/resultdetails'
import { Route as SeriesResultsQuestionresultImport } from './routes/series/results/$questionresult'
import { Route as SeriesSeriedetailsQuestiondetailsQuestionidImport } from './routes/series/serie_details/question_details/$questionid'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SeriesSerieidRoute = SeriesSerieidImport.update({
  path: '/series/$serieid',
  getParentRoute: () => rootRoute,
} as any)

const SeriesResultsIndexRoute = SeriesResultsIndexImport.update({
  path: '/series/results/',
  getParentRoute: () => rootRoute,
} as any)

const SeriesSeriedetailsSerieidRoute = SeriesSeriedetailsSerieidImport.update({
  path: '/series/serie_details/$serieid',
  getParentRoute: () => rootRoute,
} as any)

const SeriesResultsResultdetailsRoute = SeriesResultsResultdetailsImport.update(
  {
    path: '/series/results/resultdetails',
    getParentRoute: () => rootRoute,
  } as any,
)

const SeriesResultsQuestionresultRoute =
  SeriesResultsQuestionresultImport.update({
    path: '/series/results/$questionresult',
    getParentRoute: () => rootRoute,
  } as any)

const SeriesSeriedetailsQuestiondetailsQuestionidRoute =
  SeriesSeriedetailsQuestiondetailsQuestionidImport.update({
    path: '/series/serie_details/question_details/$questionid',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/series/$serieid': {
      id: '/series/$serieid'
      path: '/series/$serieid'
      fullPath: '/series/$serieid'
      preLoaderRoute: typeof SeriesSerieidImport
      parentRoute: typeof rootRoute
    }
    '/series/results/$questionresult': {
      id: '/series/results/$questionresult'
      path: '/series/results/$questionresult'
      fullPath: '/series/results/$questionresult'
      preLoaderRoute: typeof SeriesResultsQuestionresultImport
      parentRoute: typeof rootRoute
    }
    '/series/results/resultdetails': {
      id: '/series/results/resultdetails'
      path: '/series/results/resultdetails'
      fullPath: '/series/results/resultdetails'
      preLoaderRoute: typeof SeriesResultsResultdetailsImport
      parentRoute: typeof rootRoute
    }
    '/series/serie_details/$serieid': {
      id: '/series/serie_details/$serieid'
      path: '/series/serie_details/$serieid'
      fullPath: '/series/serie_details/$serieid'
      preLoaderRoute: typeof SeriesSeriedetailsSerieidImport
      parentRoute: typeof rootRoute
    }
    '/series/results/': {
      id: '/series/results/'
      path: '/series/results'
      fullPath: '/series/results'
      preLoaderRoute: typeof SeriesResultsIndexImport
      parentRoute: typeof rootRoute
    }
    '/series/serie_details/question_details/$questionid': {
      id: '/series/serie_details/question_details/$questionid'
      path: '/series/serie_details/question_details/$questionid'
      fullPath: '/series/serie_details/question_details/$questionid'
      preLoaderRoute: typeof SeriesSeriedetailsQuestiondetailsQuestionidImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/series/$serieid': typeof SeriesSerieidRoute
  '/series/results/$questionresult': typeof SeriesResultsQuestionresultRoute
  '/series/results/resultdetails': typeof SeriesResultsResultdetailsRoute
  '/series/serie_details/$serieid': typeof SeriesSeriedetailsSerieidRoute
  '/series/results': typeof SeriesResultsIndexRoute
  '/series/serie_details/question_details/$questionid': typeof SeriesSeriedetailsQuestiondetailsQuestionidRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/series/$serieid': typeof SeriesSerieidRoute
  '/series/results/$questionresult': typeof SeriesResultsQuestionresultRoute
  '/series/results/resultdetails': typeof SeriesResultsResultdetailsRoute
  '/series/serie_details/$serieid': typeof SeriesSeriedetailsSerieidRoute
  '/series/results': typeof SeriesResultsIndexRoute
  '/series/serie_details/question_details/$questionid': typeof SeriesSeriedetailsQuestiondetailsQuestionidRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutLazyRoute
  '/series/$serieid': typeof SeriesSerieidRoute
  '/series/results/$questionresult': typeof SeriesResultsQuestionresultRoute
  '/series/results/resultdetails': typeof SeriesResultsResultdetailsRoute
  '/series/serie_details/$serieid': typeof SeriesSeriedetailsSerieidRoute
  '/series/results/': typeof SeriesResultsIndexRoute
  '/series/serie_details/question_details/$questionid': typeof SeriesSeriedetailsQuestiondetailsQuestionidRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/series/$serieid'
    | '/series/results/$questionresult'
    | '/series/results/resultdetails'
    | '/series/serie_details/$serieid'
    | '/series/results'
    | '/series/serie_details/question_details/$questionid'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/series/$serieid'
    | '/series/results/$questionresult'
    | '/series/results/resultdetails'
    | '/series/serie_details/$serieid'
    | '/series/results'
    | '/series/serie_details/question_details/$questionid'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/series/$serieid'
    | '/series/results/$questionresult'
    | '/series/results/resultdetails'
    | '/series/serie_details/$serieid'
    | '/series/results/'
    | '/series/serie_details/question_details/$questionid'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutLazyRoute: typeof AboutLazyRoute
  SeriesSerieidRoute: typeof SeriesSerieidRoute
  SeriesResultsQuestionresultRoute: typeof SeriesResultsQuestionresultRoute
  SeriesResultsResultdetailsRoute: typeof SeriesResultsResultdetailsRoute
  SeriesSeriedetailsSerieidRoute: typeof SeriesSeriedetailsSerieidRoute
  SeriesResultsIndexRoute: typeof SeriesResultsIndexRoute
  SeriesSeriedetailsQuestiondetailsQuestionidRoute: typeof SeriesSeriedetailsQuestiondetailsQuestionidRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutLazyRoute: AboutLazyRoute,
  SeriesSerieidRoute: SeriesSerieidRoute,
  SeriesResultsQuestionresultRoute: SeriesResultsQuestionresultRoute,
  SeriesResultsResultdetailsRoute: SeriesResultsResultdetailsRoute,
  SeriesSeriedetailsSerieidRoute: SeriesSeriedetailsSerieidRoute,
  SeriesResultsIndexRoute: SeriesResultsIndexRoute,
  SeriesSeriedetailsQuestiondetailsQuestionidRoute:
    SeriesSeriedetailsQuestiondetailsQuestionidRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/series/$serieid",
        "/series/results/$questionresult",
        "/series/results/resultdetails",
        "/series/serie_details/$serieid",
        "/series/results/",
        "/series/serie_details/question_details/$questionid"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/series/$serieid": {
      "filePath": "series/$serieid.tsx"
    },
    "/series/results/$questionresult": {
      "filePath": "series/results/$questionresult.tsx"
    },
    "/series/results/resultdetails": {
      "filePath": "series/results/resultdetails.tsx"
    },
    "/series/serie_details/$serieid": {
      "filePath": "series/serie_details/$serieid.tsx"
    },
    "/series/results/": {
      "filePath": "series/results/index.tsx"
    },
    "/series/serie_details/question_details/$questionid": {
      "filePath": "series/serie_details/question_details/$questionid.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
