# name: 'publish'
# on:
#   workflow_dispatch:
#   push:
#     branches:
#       - main
# jobs:
#   publish-tauri:
#     permissions:
#       contents: write
#     strategy:
#       fail-fast: false
#       matrix:
#         include:
#           # # macOS builds (no 32-bit support as modern macOS doesn't support it)
#           # - platform: 'macos-latest'
#           #   args: '--target aarch64-apple-darwin'
#           # - platform: 'macos-latest'
#           #   args: '--target x86_64-apple-darwin'
          
#           # # Linux builds (64-bit and 32-bit)
#           # - platform: 'ubuntu-22.04'
#           #   args: '--target x86_64-unknown-linux-gnu'
#           # - platform: 'ubuntu-22.04'
#           #   args: '--target i686-unknown-linux-gnu'
          
#           # Windows builds (64-bit and 32-bit)
#           - platform: 'windows-latest'
#             args: '--target x86_64-pc-windows-msvc'
#           - platform: 'windows-latest'
#             args: '--target i686-pc-windows-msvc'
#     runs-on: ${{ matrix.platform }}
#     steps:
#       - uses: actions/checkout@v4
      
#       - name: install dependencies (ubuntu only)
#         if: matrix.platform == 'ubuntu-22.04'
#         run: |
#           sudo dpkg --add-architecture i386
#           sudo apt-get update
#           sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
#           sudo apt-get install -y gcc-multilib g++-multilib libssl-dev:i386 libwebkit2gtk-4.1-dev:i386
      
#       - name: setup node
#         uses: actions/setup-node@v4
#         with:
#           node-version: lts/*
#           cache: 'npm'
      
#       - name: install Rust stable
#         uses: dtolnay/rust-toolchain@stable
#         with:
#           targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || matrix.platform == 'ubuntu-22.04' && 'x86_64-unknown-linux-gnu,i686-unknown-linux-gnu' || matrix.platform == 'windows-latest' && 'x86_64-pc-windows-msvc,i686-pc-windows-msvc' }}
      
#       - name: Rust cache
#         uses: swatinem/rust-cache@v2
#         with:
#           workspaces: './src-tauri -> target'
      
#       - name: install frontend dependencies
#         run: npm install
      
#       - uses: tauri-apps/tauri-action@v0
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tagName: app-v__VERSION__
#           releaseName: 'App v__VERSION__'
#           releaseBody: 'See the assets to download this version and install.'
#           releaseDraft: true
#           prerelease: false
#           args: ${{ matrix.args }}


name: Publish Tauri App

on:
  push:
    branches: [main]

jobs:
  publish-tauri:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        args:
          - '--target x86_64-unknown-linux-gnu'
          - '--target i686-unknown-linux-gnu'

    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          profile: minimal
          toolchain: stable

      - name: Install Dependencies
        run: npm install

      - name: Build Tauri App
        uses: tauri-apps/tauri-action@v1
        with:
          target: ${{ matrix.args }}

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v0.1.0  # Replace with your desired version
          release_name: 'Code-Seddik v0.1.0'  # Replace with your desired name
          draft: false  # Set to true for draft releases
          prerelease: false  # Set to true for pre-releases
          body: |
            This is the latest release of Code-Seddik.
            Check out the release notes for more details.

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Code-Seddik
          path: target/release/bundle
